================================================
File: 7-base_geometry.py
Function : integer_validator(self, name, value)
================================================

===========================================================
validates the value
===========================================================

==================
Importing Class
==================
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

===================
Instances
===================
>>> bg = BaseGeometry()
>>> 
============================
Tests without errors
============================
>>> bg.integer_validator("ten", 10)
>>> bg.integer_validator("hundred", 100)
>>> bg.integer_validator("two", (2))
>>> bg.integer_validator(10, 10)
>>> bg.integer_validator([2, 4], 13)
>>> bg.integer_validator(-80, 1)

============
Raise Errors
============

>>> bg.integer_validator("nten", -10)
Traceback (most recent call last):
ValueError: nten must be greater than 0

>>> bg.integer_validator("zero", 0)
Traceback (most recent call last):
ValueError: zero must be greater than 0

>>> bg.integer_validator("ten", "ten")
Traceback (most recent call last):
TypeError: ten must be an integer

>>> bg.integer_validator("nten")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("ften", 10.1)
Traceback (most recent call last):
TypeError: ften must be an integer

>>> bg.integer_validator("nten", -8.452)
Traceback (most recent call last):
TypeError: nten must be an integer

>>> bg.integer_validator("nten", (1, 2))
Traceback (most recent call last):
TypeError: nten must be an integer

>>> bg.integer_validator("none", None)
Traceback (most recent call last):
TypeError: none must be an integer

>>> bg.integer_validator("object", object)
Traceback (most recent call last):
TypeError: object must be an integer

>>> bg.integer_validator("true", True)
Traceback (most recent call last):
TypeError: true must be an integer

>>> bg.integer_validator("false", False)
Traceback (most recent call last):
TypeError: false must be an integer

