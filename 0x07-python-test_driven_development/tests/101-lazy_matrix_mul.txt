=====================================
File: 101-lazy_matrix_mul.py
Function: lazy_matrix_mul(m_a, m_b)
=====================================

========================================================
Multiplies two matrices using numpy
Each element must be a float or integer
Matrices are list of lists
========================================================

==================
Importing function
==================
>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

===================
Integers and Floats
===================

>>> lazy_matrix_mul([[1, 2],[3, 4]], [[1, 2],[3, 4]])
array([[ 7, 10],
       [15, 22]])

>>> lazy_matrix_mul([[3, 5],[-2, 1]], [[4], [-2]])
array([[  2],
       [-10]])

>>> lazy_matrix_mul([[4.2, 0]], [[1, -3.1, 2.45], [2.5, 0, 20]])
array([[  4.2 , -13.02,  10.29]])

>>> lazy_matrix_mul([[5.67]], [[-9.67]])
array([[-54.8289]])

============
Raise Errors
============

>>> lazy_matrix_mul([[1, 2],[3, 'four']], [[1, 2],[3, 4]])
Traceback (most recent call last):
TypeError: invalid data type for einsum

>>> lazy_matrix_mul([[1, 2],[3, 4]], [['one', 2],[3, 4]])
Traceback (most recent call last):
TypeError: invalid data type for einsum

>>> lazy_matrix_mul((1, 2, 3), [[1, 2], [1, 2]])
Traceback (most recent call last):
ValueError: shapes (3,) and (2,2) not aligned: 3 (dim 0) != 2 (dim 0)

>>> lazy_matrix_mul([[1, 2], [3, 4]], (4, 5, 6))
Traceback (most recent call last):
ValueError: shapes (2,2) and (3,) not aligned: 2 (dim 1) != 3 (dim 0)

>>> lazy_matrix_mul([3, 6, 9],[[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: shapes (3,) and (2,2) not aligned: 3 (dim 0) != 2 (dim 0)

>>> lazy_matrix_mul([[1, 2], [3, 4]], [4, 5, 6])
Traceback (most recent call last):
ValueError: shapes (2,2) and (3,) not aligned: 2 (dim 1) != 3 (dim 0)

>>> lazy_matrix_mul([[]], [[1, 2],[3, 4]])
Traceback (most recent call last):
ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

>>> lazy_matrix_mul([], [[1, 2],[3, 4]])
Traceback (most recent call last):
ValueError: shapes (0,) and (2,2) not aligned: 0 (dim 0) != 2 (dim 0)

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
Traceback (most recent call last):
ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

>>> lazy_matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
ValueError: shapes (2,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)

>>> lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: setting an array element with a sequence.

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [3, 4]])
Traceback (most recent call last):
ValueError: setting an array element with a sequence.

>>> lazy_matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: shapes (2,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)

>>> lazy_matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4], [5, 6], [7, 8]])
Traceback (most recent call last):
ValueError: shapes (2,3) and (4,2) not aligned: 3 (dim 1) != 4 (dim 0)
